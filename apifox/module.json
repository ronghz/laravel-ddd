{
  "openapi": "3.0.1",
  "info": {
    "title": "新模块",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "pet"
    },
    {
      "name": "store"
    },
    {
      "name": "user"
    }
  ],
  "paths": {
    "/pet/{petId}/uploadImage": {
      "post": {
        "summary": "uploads an image",
        "deprecated": false,
        "description": "",
        "operationId": "uploadFile",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "description": "Additional data to pass to server",
                    "type": "string",
                    "example": ""
                  },
                  "file": {
                    "description": "file to upload",
                    "type": "string",
                    "format": "binary",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pet": {
      "post": {
        "summary": "Add a new pet to the store",
        "deprecated": false,
        "description": "",
        "operationId": "addPet",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Update an existing pet",
        "deprecated": false,
        "description": "",
        "operationId": "updatePet",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pet/findByStatus": {
      "get": {
        "summary": "Finds Pets by status",
        "deprecated": false,
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ],
                "default": "available"
              }
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pet/findByTags": {
      "get": {
        "summary": "Finds Pets by tags",
        "deprecated": true,
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid tag value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pet/{petId}": {
      "get": {
        "summary": "Find pet by ID",
        "deprecated": false,
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "x-404:记录不存在": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            },
            "headers": {}
          },
          "x-400:参数不正确": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "Updates a pet in the store with form data",
        "deprecated": false,
        "description": "",
        "operationId": "updatePetWithForm",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Updated name of the pet",
                    "type": "string",
                    "example": ""
                  },
                  "status": {
                    "description": "Updated status of the pet",
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Deletes a pet",
        "deprecated": false,
        "description": "",
        "operationId": "deletePet",
        "tags": [
          "pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/store/inventory": {
      "get": {
        "summary": "Returns pet inventories by status",
        "deprecated": false,
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "tags": [
          "store"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/store/order": {
      "post": {
        "summary": "Place an order for a pet",
        "deprecated": false,
        "description": "",
        "operationId": "placeOrder",
        "tags": [
          "store"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "summary": "Find purchase order by ID",
        "deprecated": false,
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "operationId": "getOrderById",
        "tags": [
          "store"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete purchase order by ID",
        "deprecated": false,
        "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "tags": [
          "store"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "example": 0,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/createWithList": {
      "post": {
        "summary": "Creates list of users with given input array",
        "deprecated": false,
        "description": "",
        "operationId": "createUsersWithListInput",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserArray"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{username}": {
      "get": {
        "summary": "Get user by user name",
        "deprecated": false,
        "description": "",
        "operationId": "getUserByName",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Invalid username supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "Updated user",
        "deprecated": false,
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Delete user",
        "deprecated": false,
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/login": {
      "get": {
        "summary": "Logs user into the system",
        "deprecated": false,
        "description": "",
        "operationId": "loginUser",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "headers": {
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/logout": {
      "get": {
        "summary": "Logs out current logged in user session",
        "deprecated": false,
        "description": "",
        "operationId": "logoutUser",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/createWithArray": {
      "post": {
        "summary": "Creates list of users with given input array",
        "deprecated": false,
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserArray"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user": {
      "post": {
        "summary": "Create user",
        "deprecated": false,
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "X-Request-Id",
            "in": "header",
            "description": "Request Unique Identifier",
            "required": true,
            "example": "",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "",
            "example": "zh",
            "schema": {
              "type": "string",
              "enum": [
                "zh",
                "en"
              ]
            }
          },
          {
            "name": "X-Project-Uuid",
            "in": "header",
            "description": "Project Number",
            "example": "{{X-Project-Uuid}}",
            "schema": {
              "type": "string",
              "default": "{{X-Project-Uuid}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Pet": {
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "examples": [
              "doggie"
            ]
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "UserArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "有 空格的": {
        "type": "object",
        "properties": {}
      },
      "公共结构": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "非0代表异常"
          },
          "message": {
            "type": "string",
            "description": "消息提示"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AllOf": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Tag"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID 编号"
              },
              "name": {
                "type": "string",
                "description": "名称"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        ]
      },
      "String": {
        "type": "string"
      },
      "RefString": {
        "$ref": "#/components/schemas/String"
      },
      "RefObject": {
        "$ref": "#/components/schemas/%E5%85%AC%E5%85%B1%E7%BB%93%E6%9E%84"
      }
    },
    "securitySchemes": {
      "SessionAuth": {
        "type": "apiKey",
        "name": "session_token",
        "in": "header"
      },
      "PATAuth": {
        "type": "apiKey",
        "name": "pat_token",
        "in": "header"
      },
      "LegacySessionAuth": {
        "type": "apiKey",
        "name": "legacy_session_token",
        "in": "header"
      }
    }
  },
  "servers": [],
  "security": []
}